		String path = java.net.URLDecoder.decode((com.calix.cnap.ipfix.jnca.cai.utils.Params.class.getProtectionDomain().getCodeSource().getLocation().getFile()),"utf-8");
		java.io.File directory = new java.io.File(path);;
		if (path.trim().toLowerCase().endsWith(".jar")){
			directory = directory.getParentFile();
		}
		path=directory.getCanonicalPath();
		System.out.println(path);
		
		for(int addr=0xeffffff;addr<0xfffffff;addr++){
		StringBuffer buf = new StringBuffer();
		buf.append(((addr >> 24) & 0xff)).append('.').append(((addr >> 16) & 0xff)).append('.')
		.append(((addr >> 8) & 0xff)).append('.').append(addr & 0xff);
		String tmp= buf.toString();
		char[] c = tmp.toCharArray();
		byte[] b = { 0, 0, 0, 0 };
		for (int i = 0, j = 0; i < c.length;) {
			int d = (byte) (c[i] - '0');
			switch (c[i++]) {
			case '.':
				++j;
				break;
			default:
				if ((d < 0) || (d > 9))
					return 0;
				if ((b[j] & 0xff) * 10 + d > 255)
					return 0;
				b[j] = (byte) (b[j] * 10 + d);
			}
		}
		int result= b[0] << 24 | (b[1] & 0xff) << 16 | (b[2] & 0xff) << 8
				| (b[3] & 0xff);
		if (result!=addr){
			System.out.println(tmp);
		}
		}
		return;
		String ip = "192.168.3.88";
		char[] c = ip.toCharArray();
		byte[] b = { 0, 0, 0, 0 };
		for (int i = 0, j = 0; i < c.length;) {
			int d = (byte) (c[i] - '0');
			switch (c[i++]) {
			case '.':
				++j;
				break;
			default:
				if ((d < 0) || (d > 9))
					return 0;
				if ((b[j] & 0xff) * 10 + d > 255)
					return 0;
				b[j] = (byte) (b[j] * 10 + d);
			}
		}
		int retInt= b[0] << 24 | (b[1] & 0xff) << 16 | (b[2] & 0xff) << 8
				| (b[3] & 0xff);
		long retlong=0l;
		retlong=retlong|retInt;
		System.out.println(retlong);
		
		System.out.println("fdasf"+null);

